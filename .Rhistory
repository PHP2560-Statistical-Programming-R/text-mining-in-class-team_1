ungroup() %>%
top_n(100) %>%
ggplot(aes(x = word , by= word, fill = word)) +
facet_wrap(~Book) +
geom_bar(show.legend = F) +
coord_flip() +
theme_minimal() +
theme(
axis.text = element_text( hjust = 3 ) ,
axis.line.y = element_blank(),
axis.ticks.y = element_blank()
)
harrypoterclean %>%
inner_join(characters_listjoin) %>%
mutate( fiftylines=  floor(line / 50)) %>%
count(Book, fiftylines, word) %>%
arrange(Book, fiftylines, word) %>%
group_by(Book,fiftylines) %>%
filter(!word %in% c( "sir", "harry")) %>%
filter(n == max(n)) %>%
ungroup() %>%
top_n(100) %>%
ggplot(aes(x = word , by= word, fill = word)) +
facet_wrap(~Book) +
geom_bar(show.legend = F) +
coord_flip() +
theme_minimal() +
theme(
axis.text = element_text( hjust = -8 ) ,
axis.line.y = element_blank(),
axis.ticks.y = element_blank()
)
harrypoterclean %>%
inner_join(characters_listjoin) %>%
mutate( fiftylines=  floor(line / 50)) %>%
count(Book, fiftylines, word) %>%
arrange(Book, fiftylines, word) %>%
group_by(Book,fiftylines) %>%
filter(!word %in% c( "sir", "harry")) %>%
filter(n == max(n)) %>%
ungroup() %>%
top_n(100) %>%
ggplot(aes(x = word , by= word, fill = word)) +
facet_wrap(~Book) +
geom_bar(show.legend = F) +
coord_flip() +
theme_minimal() +
theme(
axis.text = element_text( hjust = -80 ) ,
axis.line.y = element_blank(),
axis.ticks.y = element_blank()
)
harrypoterclean %>%
inner_join(characters_listjoin) %>%
mutate( fiftylines=  floor(line / 50)) %>%
count(Book, fiftylines, word) %>%
arrange(Book, fiftylines, word) %>%
group_by(Book,fiftylines) %>%
filter(!word %in% c( "sir", "harry")) %>%
filter(n == max(n)) %>%
ungroup() %>%
top_n(100) %>%
ggplot(aes(x = word , by= word, fill = word)) +
facet_wrap(~Book) +
geom_bar(show.legend = F) +
coord_flip() +
theme_minimal() +
theme(
axis.text = element_text( hjust = -8 ) ,
axis.line.y = element_blank(),
axis.ticks.y = element_blank()
)
harrypoterclean %>%
inner_join(characters_listjoin) %>%
mutate( fiftylines=  floor(line / 50)) %>%
count(Book, fiftylines, word) %>%
arrange(Book, fiftylines, word) %>%
group_by(Book,fiftylines) %>%
filter(!word %in% c( "sir", "harry")) %>%
filter(n == max(n)) %>%
ungroup() %>%
top_n(100) %>%
ggplot(aes(x = word , by= word, fill = word)) +
facet_wrap(~Book) +
geom_bar(show.legend = F) +
coord_flip() +
theme_minimal() +
theme(
axis.text = element_text( hjust = -8 ) ,
axis.line.y = element_blank()
)
harrypoterclean %>%
inner_join(characters_listjoin) %>%
mutate( fiftylines=  floor(line / 50)) %>%
count(Book, fiftylines, word) %>%
arrange(Book, fiftylines, word) %>%
group_by(Book,fiftylines) %>%
filter(!word %in% c( "sir", "harry")) %>%
filter(n == max(n)) %>%
ungroup() %>%
top_n(100) %>%
ggplot(aes(x = word , by= word, fill = word)) +
facet_wrap(~Book) +
geom_bar(show.legend = F) +
coord_flip() +
theme_minimal() +
theme(
axis.line.y = element_blank()
)
harrypoterclean %>%
# filter uut confusing words
filter(word != "professor") %>%
anti_join(characters_listjoin) %>%
# joining with sentiment
inner_join(get_sentiments("nrc")) %>%
count(Book, sentiment, word, sort = TRUE) %>%
group_by(Book) %>%
# subseting top 10 mentioned words per sentiment
top_n(10) %>%
ungroup() %>%
# graph making
mutate(word = reorder(paste(sentiment, Book, sep = "__"), n)) %>%
ggplot(aes(word, n, fill = Book)) +
geom_col(show.legend = FALSE) +
scale_x_discrete(labels = function(x) gsub("__.+$", "", x)) +
facet_wrap(~Book, nrow = 2, scales = "free") +
coord_flip()  +
theme_minimal() + # start with a minimal them and add what we need
theme( text = element_text(color = "gray20"),
axis.text = element_text(face = "italic"),
axis.text.x = element_text(size = 7),
axis.ticks.x = element_blank(),
axis.line = element_line(color = "gray50", size = 0.5),
axis.line.y   = element_blank(),
panel.grid.major.y = element_blank(),
panel.grid.minor.x = element_line(color = "gray50", size = .3),
panel.grid.major.x = element_line(color = "gray50", size = .3)
)
harrypoterclean %>%
inner_join(characters_listjoin) %>%
mutate( fiftylines=  floor(line / 50)) %>%
count(Book, fiftylines, word) %>%
arrange(Book, fiftylines, word) %>%
group_by(Book,fiftylines) %>%
filter(!word %in% c( "sir", "harry")) %>%
filter(n == max(n)) %>%
ungroup() %>%
top_n(100) %>%
ggplot(aes(x = word , by= word, fill = word)) +
facet_wrap(~Book) +
geom_bar(show.legend = F) +
coord_flip() +
theme_minimal() +
theme(
panel.grid.major.y = element_blank(),
axis.line.y = element_blank()
)
harrypoterclean %>%
inner_join(characters_listjoin) %>%
mutate( fiftylines=  floor(line / 50)) %>%
count(Book, fiftylines, word) %>%
arrange(Book, fiftylines, word) %>%
group_by(Book,fiftylines) %>%
filter(!word %in% c( "sir", "harry")) %>%
filter(n == max(n)) %>%
ungroup() %>%
top_n(100) %>%
ggplot(aes(x = word , by= word, fill = word)) +
facet_wrap(~Book) +
geom_bar(show.legend = F) +
coord_flip() +
theme_minimal() +
theme(
panel.grid.major.x = element_blank(),
axis.line.y = element_blank()
)
harrypoterclean %>%
inner_join(characters_listjoin) %>%
mutate( fiftylines=  floor(line / 50)) %>%
count(Book, fiftylines, word) %>%
arrange(Book, fiftylines, word) %>%
group_by(Book,fiftylines) %>%
filter(!word %in% c( "sir", "harry")) %>%
filter(n == max(n)) %>%
ungroup() %>%
top_n(100) %>%
ggplot(aes(x = word , by= word, fill = word)) +
facet_wrap(~Book) +
geom_bar(show.legend = F) +
coord_flip() +
theme_minimal() +
theme(
panel.grid.minor.y  = element_blank(),
axis.line.y = element_blank()
)
harrypoterclean %>%
inner_join(characters_listjoin) %>%
mutate( fiftylines=  floor(line / 50)) %>%
count(Book, fiftylines, word) %>%
arrange(Book, fiftylines, word) %>%
group_by(Book,fiftylines) %>%
filter(!word %in% c( "sir", "harry")) %>%
filter(n == max(n)) %>%
ungroup() %>%
top_n(100) %>%
ggplot(aes(x = word , by= word, fill = word)) +
facet_wrap(~Book) +
geom_bar(show.legend = F) +
coord_flip() +
theme_minimal() +
theme(
panel.grid.major.y  = element_blank(),
axis.line.y = element_blank()
)
harrypoterclean %>%
inner_join(characters_listjoin) %>%
mutate( fiftylines=  floor(line / 50)) %>%
count(Book, fiftylines, word) %>%
arrange(Book, fiftylines, word) %>%
group_by(Book,fiftylines) %>%
filter(!word %in% c( "sir", "harry")) %>%
filter(n == max(n)) %>%
ungroup() %>%
top_n(100) %>%
ggplot(aes(x = word , by= word, fill = word)) +
facet_wrap(~Book) +
geom_bar(show.legend = F) +
coord_flip() +
theme_minimal() +
theme(
panel.grid.major.y  = element_blank()
)
harrypoterclean %>%
inner_join(characters_listjoin) %>%
mutate( fiftylines=  floor(line / 50)) %>%
count(Book, fiftylines, word) %>%
arrange(Book, fiftylines, word) %>%
group_by(Book,fiftylines) %>%
filter(!word %in% c( "sir", "harry")) %>%
filter(n == max(n)) %>%
ungroup() %>%
top_n(100) %>%
ggplot(aes(x = word , by= word, fill = word)) +
facet_wrap(~Book) +
geom_bar(show.legend = F) +
coord_flip() +
theme_minimal() +
theme(
panel.grid.major.y  = element_blank()
text = element_text(size = 5)
harrypoterclean %>%
inner_join(characters_listjoin) %>%
mutate( fiftylines=  floor(line / 50)) %>%
count(Book, fiftylines, word) %>%
arrange(Book, fiftylines, word) %>%
group_by(Book,fiftylines) %>%
filter(!word %in% c( "sir", "harry")) %>%
filter(n == max(n)) %>%
ungroup() %>%
top_n(100) %>%
ggplot(aes(x = word , by= word, fill = word)) +
facet_wrap(~Book) +
geom_bar(show.legend = F) +
coord_flip() +
theme_minimal() +
theme(
panel.grid.major.y  = element_blank(),
text = element_text(size = 5)
)
harrypoterclean %>%
inner_join(characters_listjoin) %>%
mutate( fiftylines=  floor(line / 50)) %>%
count(Book, fiftylines, word) %>%
arrange(Book, fiftylines, word) %>%
group_by(Book,fiftylines) %>%
filter(!word %in% c( "sir", "harry")) %>%
filter(n == max(n)) %>%
ungroup() %>%
top_n(100) %>%
ggplot(aes(x = word , by= word, fill = word)) +
facet_wrap(~Book) +
geom_bar(show.legend = F) +
coord_flip() +
theme_minimal() +
theme(
panel.grid.major.y  = element_blank(),
text = element_text(size = 8)
)
harrypoterclean %>%
inner_join(characters_listjoin) %>%
mutate( fiftylines=  floor(line / 50)) %>%
count(Book, fiftylines, word) %>%
arrange(Book, fiftylines, word) %>%
group_by(Book,fiftylines) %>%
filter(!word %in% c( "sir", "harry")) %>%
filter(n == max(n)) %>%
ungroup() %>%
top_n(100) %>%
ggplot(aes(x = word , by= word, fill = word)) +
facet_wrap(~Book) +
geom_bar(show.legend = F) +
coord_flip() +
theme_minimal() +
theme(
panel.grid.major.y  = element_blank(),
text = element_text(size = 7)
)
harrypoterclean %>%
inner_join(characters_listjoin) %>%
mutate( fiftylines=  floor(line / 50)) %>%
count(Book, fiftylines, word) %>%
arrange(Book, fiftylines, word) %>%
group_by(Book,fiftylines) %>%
filter(!word %in% c( "sir", "harry")) %>%
filter(n == max(n)) %>%
ungroup() %>%
top_n(100) %>%
ggplot(aes(x = word , by= word, fill = word)) +
facet_wrap(~Book) +
geom_bar(show.legend = F) +
coord_flip() +
theme_minimal() +
theme(
panel.grid.major.y  = element_blank(),
text = element_text(size = 8)
)
harrypoterclean %>%
inner_join(characters_listjoin) %>%
mutate( fiftylines=  floor(line / 50)) %>%
count(Book, fiftylines, word) %>%
arrange(Book, fiftylines, word) %>%
group_by(Book,fiftylines) %>%
filter(!word %in% c( "sir", "harry")) %>%
filter(n == max(n)) %>%
ungroup() %>%
top_n(100) %>%
ggplot(aes(x = word , by= word, fill = word)) +
facet_wrap(~Book) +
geom_bar(show.legend = F) +
coord_flip() +
theme_minimal() +
theme(
panel.grid.major.y  = element_blank(),
text = element_text(size = 7)
)
harrypoterclean %>%
inner_join(characters_listjoin) %>%
mutate( fiftylines=  floor(line / 50)) %>%
count(Book, fiftylines, word) %>%
arrange(Book, fiftylines, word) %>%
group_by(Book,fiftylines) %>%
filter(!word %in% c( "sir", "harry")) %>%
filter(n == max(n)) %>%
ungroup() %>%
top_n(100) %>%
ggplot(aes(x = word , by= word, fill = word)) +
facet_wrap(~Book) +
geom_bar(show.legend = F) +
coord_flip() +
theme_minimal() +
theme(
panel.grid.major.y  = element_blank(),
text = element_text(size = 7, color = "black")
)
harrypoterclean %>%
inner_join(characters_listjoin) %>%
mutate( fiftylines=  floor(line / 50)) %>%
count(Book, fiftylines, word) %>%
arrange(Book, fiftylines, word) %>%
group_by(Book,fiftylines) %>%
filter(!word %in% c( "sir", "harry")) %>%
filter(n == max(n)) %>%
ungroup() %>%
top_n(100) %>%
ggplot(aes(x = word , by= word, fill = word)) +
facet_wrap(~Book) +
geom_bar(show.legend = F) +
coord_flip() +
theme_minimal() +
theme(
panel.grid.major.y  = element_blank(),
text = element_blank()
)
harrypoterclean %>%
inner_join(characters_listjoin) %>%
mutate( fiftylines=  floor(line / 50)) %>%
count(Book, fiftylines, word) %>%
arrange(Book, fiftylines, word) %>%
group_by(Book,fiftylines) %>%
filter(!word %in% c( "sir", "harry")) %>%
filter(n == max(n)) %>%
ungroup() %>%
top_n(100) %>%
ggplot(aes(x = word , by= word, fill = word)) +
facet_wrap(~Book) +
geom_bar(show.legend = F) +
coord_flip() +
theme_minimal() +
theme(
panel.grid.major.y  = element_blank(),
text = element_text(size = 7, color = "black")
)
harrypoterclean %>%
# filter uut confusing words
filter(word != "professor") %>%
anti_join(characters_listjoin) %>%
# joining with sentiment
inner_join(get_sentiments("nrc")) %>%
count(Book, sentiment, word, sort = TRUE) %>%
group_by(Book) %>%
# subseting top 10 mentioned words per sentiment
top_n(10) %>%
ungroup() %>%
# graph making
mutate(word = reorder(paste(sentiment, Book, sep = "__"), n)) %>%
ggplot(aes(word, n, fill = Book)) +
geom_col(show.legend = FALSE) +
scale_x_discrete(labels = function(x) gsub("__.+$", "", x)) +
facet_wrap(~Book, nrow = 2, scales = "free") +
coord_flip()  +
theme_minimal() + # start with a minimal them and add what we need
theme( text = element_text(color = "gray20"),
axis.text = element_text(face = "italic"),
axis.text.x = element_text(size = 7),
axis.ticks.x = element_blank(),
axis.line = element_line(color = "gray50", size = 0.5),
axis.line.y   = element_blank(),
panel.grid.major.y = element_blank(),
panel.grid.minor.x = element_line(color = "gray50", size = .3),
panel.grid.major.x = element_line(color = "gray50", size = .3)
)
harrypoterclean %>%
filter(word == "harry") %>%
mutate( fiftylines=  floor(line / 50)) %>%
count(Book, fiftylines, word) %>%
#making graph
ggplot(aes(fiftylines, n, color = Book)) +
# Make facets by Book
facet_wrap(~Book) +
geom_line(size = .1, show.legend = FALSE) +
expand_limits(y = 0)
harrypoterclean %>%
count(Book) %>%
rename(total_word = n) %>%
ungroup() %>%
left_join(harrypoterclean, "Book") %>%
# joining with sentiment "nrc"
inner_join(get_sentiments("nrc")) %>%
count( Book,total_word, sentiment , sort = TRUE) %>%
ungroup() %>%
mutate(percent = n/total_word)%>%
# filtering only negative sentiments
filter(sentiment == "fear") %>%
arrange(desc(percent)) %>%
ggplot( aes(x = Book, y = percent, fill = Book))+
geom_col(width = .7 ,show.legend = T ) +
theme_minimal() + # start with a minimal them and add what we need
theme( text = element_text(color = "gray20"),
legend.position = c("top"), # position the legend to the upper left
legend.direction = "horizontal",
legend.justification = 0.1, # anchor point for legend position
legend.text = element_text(size = 7, color = "black"),
axis.text = element_text(face = "italic"),
axis.text.x = element_text(size = 7),
axis.line = element_line(color = "gray50", size = 0.5),
axis.line.y = element_blank(),
panel.grid.major = element_line(color = "gray50", size = .5),
panel.grid.major.x = element_blank(),
panel.grid.minor = element_line(color = "gray50", size = .5)
)
??check_packages
# function to check for required packages by:https://gist.github.com/smithdanielle/9913897
check.packages <- function(pkg){
new.pkg <- pkg[!(pkg %in% installed.packages()[, "Package"])]
if (length(new.pkg))
install.packages(new.pkg, dependencies = TRUE)
sapply(pkg, require, character.only = TRUE)
}
packages<-c("ggplot2", "dplyr", "stringi", "harrypotter", "tidytext", "rebus")
check.packages(packages)
if (packageVersion("devtools") < 1.6) {
install.packages("devtools")}
devtools::install_github("bradleyboehmke/harrypotter")
library(dplyr)
library(stringi)
library(harrypotter)
library(tidytext)
library(rebus)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source("check_packages.R")
packages<-c("ggplot2", "dplyr", "stringi", "harrypotter", "tidytext", "rebus")
check.packages(packages)
View(check.packages)
source('~/.active-rstudio-document', echo=TRUE)
source('~/Documents/MPH Brown /PHP 1560 /in class/text-mining-in-class-team_1/Nour/01.R', echo=TRUE)
source('~/Documents/MPH Brown /PHP 1560 /in class/text-mining-in-class-team_1/Nour/01.R', echo=TRUE)
source('~/Documents/MPH Brown /PHP 1560 /in class/text-mining-in-class-team_1/Nour/01.R', echo=TRUE)
source('~/Documents/MPH Brown /PHP 1560 /in class/text-mining-in-class-team_1/Nour/01.R', echo=TRUE)
source('~/Documents/MPH Brown /PHP 1560 /in class/text-mining-in-class-team_1/Nour/01.R', echo=TRUE)
source('~/Documents/MPH Brown /PHP 1560 /in class/text-mining-in-class-team_1/Nour/01.R', echo=TRUE)
source('~/Documents/MPH Brown /PHP 1560 /in class/text-mining-in-class-team_1/Nour/01.R', echo=TRUE)
source('~/Documents/MPH Brown /PHP 1560 /in class/text-mining-in-class-team_1/Nour/01_ get Harry potter.R', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
View(harrypoter)
source('~/Documents/MPH Brown /PHP 1560 /in class/text-mining-in-class-team_1/Nour/02_ getting and cleaning data  .R', echo=TRUE)
harrypoter
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
characters_listjoin
