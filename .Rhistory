unnest_tokens(sentence, text, token = "sentences") %>%
mutate(line = row_number())
# the sixth book
philosophers_stone_tidy <- data_frame(text = philosophers_stone, Book = "philosophers_stone" ) %>%
mutate(chapter = row_number() ) %>%
unnest_tokens(sentence, text, token = "sentences") %>%
mutate(line = row_number())
# the seventh book
prisoner_of_azkaban_tidy <- data_frame(text = prisoner_of_azkaban, Book = "prisoner_of_azkaban") %>%
mutate(chapter = row_number() ) %>%
unnest_tokens(sentence, text, token = "sentences") %>%
mutate(line = row_number())
# making one dataframe for all books
harrypoter <- rbind(chamber_of_secrets_tidy, deathly_hallows_tidy, goblet_of_fire_tidy, half_blood_prince_tidy, order_of_the_phoenix_tidy, philosophers_stone_tidy, prisoner_of_azkaban_tidy)
harrypoter
harrypoterclean %>%
# joining with sentiment "bing"
inner_join(get_sentiments("bing")) %>%
group_by(Book) %>%
count( Book, sentiment , sort = TRUE) %>%
# filtering only negative sentiments
filter(sentiment == "negative") %>%
# the most negative book is order_of_the_phoenix with 8774 negative word.
ggplot( aes(x = Book, y = percent, fill = Book))+
geom_col(width = .7 ,show.legend = T ) +
theme_minimal() + # start with a minimal them and add what we need
theme( text = element_text(color = "gray20"),
legend.position = c("top"), # position the legend to the upper left
legend.direction = "horizontal",
legend.justification = 0.1, # anchor point for legend position
legend.text = element_text(size = 7, color = "black"),
axis.text = element_text(face = "italic"),
axis.text.x = element_text(size = 7),
axis.line = element_line(color = "gray50", size = 0.5),
axis.line.y = element_blank(),
panel.grid.major = element_line(color = "gray50", size = .5),
panel.grid.major.x = element_blank(),
panel.grid.minor = element_line(color = "gray50", size = .5)
)
harrypoterclean %>%
count(Book) %>%
rename(total_word = n) %>%
ungroup() %>%
left_join(harrypoterclean, "Book") %>%
# joining with sentiment "nrc"
inner_join(get_sentiments("nrc")) %>%
count( Book,total_word, sentiment , sort = TRUE) %>%
ungroup() %>%
mutate(percent = n/total_word)%>%
# filtering only negative sentiments
filter(sentiment == "fear") %>%
arrange(desc(percent)) %>%
ggplot( aes(x = Book, y = percent, fill = Book))+
geom_col(width = .7 ,show.legend = T ) +
theme_minimal() + # start with a minimal them and add what we need
theme( text = element_text(color = "gray20"),
legend.position = c("top"), # position the legend to the upper left
legend.direction = "horizontal",
legend.justification = 0.1, # anchor point for legend position
legend.text = element_text(size = 7, color = "black"),
axis.text = element_text(face = "italic"),
axis.text.x = element_text(size = 7),
axis.line = element_line(color = "gray50", size = 0.5),
axis.line.y = element_blank(),
panel.grid.major = element_line(color = "gray50", size = .5),
panel.grid.major.x = element_blank(),
panel.grid.minor = element_line(color = "gray50", size = .5)
)
harrypoterclean %>%
count(Book, word, sort = TRUE) %>%
group_by(Book) %>%
top_n(10) %>%
arrange(desc(n)) %>%
ungroup() %>%
ggplot( aes(x = word, y = n, fill = Book))+
geom_col(show.legend = F)+
facet_wrap(~Book, scales = "free")+
coord_flip() +
theme_minimal() + # start with a minimal them and add what we need
theme( text = element_text(color = "gray20"),
axis.text = element_text(face = "italic"),
axis.text.x = element_text(size = 7),
axis.ticks.x = element_blank(),
axis.line = element_line(color = "gray50", size = 0.5),
axis.line.y   = element_blank(),
panel.grid.major.y = element_blank(),
panel.grid.minor.x = element_line(color = "gray50", size = .5),
panel.grid.major.x = element_line(color = "gray50", size = .5)
)
# So the most imporatnt word by frequency of use is harry
harrypoterclean %>%
inner_join( characters_listjoin, by = "word" ) %>%
count(Book, word, sort =  TRUE) %>%
group_by(Book) %>%
# take the top ten characters mentioned in each book
top_n(10) %>%
ungroup() %>%
mutate(word = reorder(paste(word, Book, sep = "__"), n)) %>%
ggplot(aes(word, n, fill = Book)) +
geom_col(show.legend = FALSE) +
scale_x_discrete(labels = function(x) gsub("__.+$", "", x)) +
facet_wrap(~ Book, nrow = 2, scales = "free") +
coord_flip() +
theme_minimal() + # start with a minimal them and add what we need
theme( text = element_text(color = "gray20"),
axis.text = element_text(face = "italic"),
axis.text.x = element_text(size = 7),
axis.ticks.x = element_blank(),
axis.line = element_line(color = "gray50", size = 0.5),
axis.line.y   = element_blank(),
panel.grid.major.y = element_blank(),
panel.grid.minor.x = element_line(color = "gray50", size = .5),
panel.grid.major.x = element_line(color = "gray50", size = .5)
)
harrypoterclean %>%
inner_join(characters_listjoin, by = "word") %>%
count(Book, word) %>%
filter(word == "harry") %>%
# plotting graph by book
ggplot(aes(x = Book, y = n, fill = Book)) +
geom_col(width = .7 ,show.legend = T ) +
theme_minimal() + # start with a minimal them and add what we need
theme( text = element_text(color = "gray20"),
legend.position = c("top"), # position the legend to the upper left
legend.direction = "horizontal",
legend.justification = 0.1, # anchor point for legend position
legend.text = element_text(size = 7, color = "black"),
axis.text = element_text(face = "italic"),
axis.text.x = element_text(size = 7),
axis.line = element_line(color = "gray50", size = 0.5),
axis.line.y = element_blank(),
panel.grid.major = element_line(color = "gray50", size = .5),
panel.grid.major.x = element_blank(),
panel.grid.minor = element_line(color = "gray50", size = .5)
)
harrypoterclean %>%
# filter uut confusing words
filter(word != "professor") %>%
anti_join(characters_listjoin) %>%
# joining with sentiment
inner_join(get_sentiments("nrc")) %>%
count(Book, sentiment, word, sort = TRUE) %>%
group_by(Book) %>%
# subseting top 10 mentioned words per sentiment
top_n(10) %>%
ungroup() %>%
# graph making
mutate(word = reorder(paste(sentiment, Book, sep = "__"), n)) %>%
ggplot(aes(word, n, fill = Book)) +
geom_col(show.legend = FALSE) +
scale_x_discrete(labels = function(x) gsub("__.+$", "", x)) +
facet_wrap(~Book, nrow = 2, scales = "free") +
coord_flip()  +
theme_minimal() + # start with a minimal them and add what we need
theme( text = element_text(color = "gray20"),
axis.text = element_text(face = "italic"),
axis.text.x = element_text(size = 7),
axis.ticks.x = element_blank(),
axis.line = element_line(color = "gray50", size = 0.5),
axis.line.y   = element_blank(),
panel.grid.major.y = element_blank(),
panel.grid.minor.x = element_line(color = "gray50", size = .3),
panel.grid.major.x = element_line(color = "gray50", size = .3)
)
harrypoterclean %>%
filter(word == "harry") %>%
mutate( fiftylines=  floor(line / 50)) %>%
count(Book, fiftylines, word) %>%
#making graph
ggplot(aes(fiftylines, n)) +
# Make facets by Book
facet_wrap(~Book) +
geom_line(size = .1, show.legend = FALSE) +
expand_limits(y = 0)
harrypoterclean %>%
filter(word == "harry") %>%
mutate( fiftylines=  floor(line / 50)) %>%
count(Book, fiftylines, word) %>%
#making graph
ggplot(aes(fiftylines, n, color = Book)) +
# Make facets by Book
facet_wrap(~Book) +
geom_line(size = .1, show.legend = FALSE) +
expand_limits(y = 0)
harrypoterclean %>%
inner_join(characters_listjoin) %>%
mutate( fiftylines=  floor(line / 50)) %>%
count(Book, fiftylines, word) %>%
arrange(Book, fiftylines, word) %>%
group_by(Book,fiftylines) %>%
filter(word != "sir") %>%
filter(n == max(n)) %>%
ungroup() %>%
top_n(100) %>%
ggplot(aes(x = word , by= word, fill = word)) +
facet_wrap(~Book) +
geom_bar(show.legend = F) +
coord_flip() +
theme_minimal() +
theme(
panel.grid.major.y  = element_blank(),
text = element_text(size = 7, color = "black")
)
# making list of  the whole series characters:
# after making a txt file from "https://en.wikipedia.org/wiki/List_of_Harry_Potter_characters" then importing to R
characters_raw <- readLines("characters_ weki.txt")
source('~/.active-rstudio-document', echo=TRUE)
??wrangle_and_clean()
source('~/Documents/MPH Brown /PHP 1560 /in class/text-mining-in-class-team_1/Nour/02_ getting and cleaning data  .R', echo=TRUE)
source('~/Documents/MPH Brown /PHP 1560 /in class/text-mining-in-class-team_1/Nour/02_ getting and cleaning data  .R', echo=TRUE)
source('~/Documents/MPH Brown /PHP 1560 /in class/text-mining-in-class-team_1/Nour/03_ getting and cleaning characters list  .R', echo=TRUE)
source('~/Documents/MPH Brown /PHP 1560 /in class/text-mining-in-class-team_1/Nour/04_ Analysis.R', echo=TRUE)
source('~/Documents/MPH Brown /PHP 1560 /in class/text-mining-in-class-team_1/Nour/04_ Analysis.R', echo=TRUE)
source('~/Documents/MPH Brown /PHP 1560 /in class/text-mining-in-class-team_1/Nour/04_ Analysis.R', echo=TRUE)
source('~/Documents/MPH Brown /PHP 1560 /in class/text-mining-in-class-team_1/Nour/04_ Analysis.R', echo=TRUE)
graphQ1 <- function(){
harrypoterclean %>%
inner_join( characters_listjoin, by = "word" ) %>%
count(Book, word,sort= TRUE) %>%
top_n(50) %>%
filter( word != "harry")%>%
ggplot(aes(word, n, fill = word)) +
geom_col(show.legend = FALSE) +
facet_wrap(~Book) +
coord_flip() +
theme_minimal() + # start with a minimal them and add what we need
theme( text = element_text(color = "gray20"),
axis.text = element_text(face = "italic", size = 6),
axis.line = element_line(color = "gray50", size = 0.5),
axis.line.y = element_blank(),
panel.grid.major = element_line(color = "gray80", size = 0.5),
panel.grid.major.y = element_blank(),
panel.grid.minor = element_line(color = "gray10", size = 0.5)
)
ggsave("Nour/graph/q1.png")
}
source('~/Documents/MPH Brown /PHP 1560 /in class/text-mining-in-class-team_1/Nour/04_ Analysis.R', echo=TRUE)
source('~/Documents/MPH Brown /PHP 1560 /in class/text-mining-in-class-team_1/allan/makefile.R', echo=TRUE)
knitr::opts_chunk$set(echo = TRUE)
eval(F)
harrypoterclean %>%
inner_join(characters_listjoin) %>%
mutate( fiftylines=  floor(line / 50)) %>%
count(Book, fiftylines, word) %>%
arrange(Book, fiftylines, word) %>%
group_by(Book,fiftylines) %>%
filter(word != "sir") %>%
filter(n == max(n)) %>%
ungroup() %>%
top_n(100) %>%
ggplot(aes(x = word , by= word, fill = word)) +
facet_wrap(~Book) +
geom_bar(show.legend = F) +
coord_flip() +
theme_minimal() +
theme(
panel.grid.major.y  = element_blank(),
text = element_text(size = 7, color = "black")
)
source('~/Documents/MPH Brown /PHP 1560 /in class/text-mining-in-class-team_1/Nour/04_ Analysis.R', echo=TRUE)
harrypoterclean %>%
inner_join( characters_listjoin, by = "word" ) %>%
count(Book, word,sort= TRUE) %>%
top_n(50) %>%
filter( word != "harry")%>%
ggplot(aes(word, n, fill = word)) +
geom_col(show.legend = FALSE) +
facet_wrap(~Book) +
coord_flip() +
theme_minimal() + # start with a minimal them and add what we need
theme( text = element_text(color = "gray20"),
axis.text = element_text(face = "italic", size = 6),
axis.line = element_line(color = "gray50", size = 0.5),
axis.line.y = element_blank(),
panel.grid.major = element_line(color = "gray80", size = 0.5),
panel.grid.major.y = element_blank(),
panel.grid.minor = element_line(color = "gray10", size = 0.5)
)
harrypoterclean %>%
inner_join( characters_listjoin, by = "word" ) %>%
count(Book, word,sort= TRUE) %>%
top_n(50) %>%
filter( word != "harry")%>%
ggplot(aes(word, n, fill = word)) +
geom_col(show.legend = FALSE) +
facet_wrap(~Book) +
coord_flip() +
theme_minimal() + # start with a minimal them and add what we need
theme( text = element_text(color = "gray20"),
axis.text = element_text(face = "italic", size = 6),
axis.line = element_line(color = "gray50", size = 0.5),
axis.line.y = element_blank(),
panel.grid.major = element_line(color = "gray80", size = 0.5),
panel.grid.major.y = element_blank(),
panel.grid.minor = element_line(color = "gray10", size = 0.5)
)
ggsave("Nour/graph/q1.png")
}
harrypoterclean %>%
inner_join( characters_listjoin, by = "word" ) %>%
count(Book, word,sort= TRUE) %>%
top_n(50) %>%
filter( word != "harry")%>%
ggplot(aes(word, n, fill = word)) +
geom_col(show.legend = FALSE) +
facet_wrap(~Book) +
coord_flip() +
theme_minimal() + # start with a minimal them and add what we need
theme( text = element_text(color = "gray20"),
axis.text = element_text(face = "italic", size = 6),
axis.line = element_line(color = "gray50", size = 0.5),
axis.line.y = element_blank(),
panel.grid.major = element_line(color = "gray80", size = 0.5),
panel.grid.major.y = element_blank(),
panel.grid.minor = element_line(color = "gray10", size = 0.5)
)
ggsave("Nour/graph/q1.png")
source('~/Documents/MPH Brown /PHP 1560 /in class/text-mining-in-class-team_1/Nour/04_ Analysis.R', echo=TRUE)
source('~/Documents/MPH Brown /PHP 1560 /in class/text-mining-in-class-team_1/Nour/04_ Analysis.R', echo=TRUE)
source('~/Documents/MPH Brown /PHP 1560 /in class/text-mining-in-class-team_1/Nour/04_ Analysis.R', echo=TRUE)
knitr::opts_chunk$set(echo = TRUE)
source('~/Documents/MPH Brown /PHP 1560 /in class/text-mining-in-class-team_1/Nour/makefile.R', echo=TRUE)
source('~/Documents/MPH Brown /PHP 1560 /in class/text-mining-in-class-team_1/Nour/makefile.R', echo=TRUE)
source('~/Documents/MPH Brown /PHP 1560 /in class/text-mining-in-class-team_1/Nour/makefile.R', echo=TRUE)
source('~/Documents/MPH Brown /PHP 1560 /in class/text-mining-in-class-team_1/Nour/01_ setting up R .R', echo=TRUE)
source('~/Documents/MPH Brown /PHP 1560 /in class/text-mining-in-class-team_1/Nour/01_ setting up R .R', echo=TRUE)
source('~/Documents/MPH Brown /PHP 1560 /in class/text-mining-in-class-team_1/Nour/01_ setting up R .R', echo=TRUE)
source('~/Documents/MPH Brown /PHP 1560 /in class/text-mining-in-class-team_1/Nour/makefile.R', echo=TRUE)
source('~/Documents/MPH Brown /PHP 1560 /in class/text-mining-in-class-team_1/Nour/makefile.R', echo=TRUE)
source('~/Documents/MPH Brown /PHP 1560 /in class/text-mining-in-class-team_1/Nour/makefile.R', echo=TRUE)
source('~/Documents/MPH Brown /PHP 1560 /in class/text-mining-in-class-team_1/Nour/makefile.R', echo=TRUE)
source('~/Documents/MPH Brown /PHP 1560 /in class/text-mining-in-class-team_1/Nour/makefile.R', echo=TRUE)
source('~/Documents/MPH Brown /PHP 1560 /in class/text-mining-in-class-team_1/Nour/makefile.R', echo=TRUE)
source('~/Documents/MPH Brown /PHP 1560 /in class/text-mining-in-class-team_1/Nour/makefile.R', echo=TRUE)
source('~/Documents/MPH Brown /PHP 1560 /in class/text-mining-in-class-team_1/Nour/makefile.R', echo=TRUE)
source('~/Documents/MPH Brown /PHP 1560 /in class/text-mining-in-class-team_1/Nour/makefile.R', echo=TRUE)
knit_with_parameters('~/Documents/MPH Brown /PHP 1560 /in class/text-mining-in-class-team_1/Nour/paper.Rmd')
install.packages(c("gapminder", "glue", "hunspell", "lazyeval", "lubridate", "openssl", "topicmodels", "withr"))
install.packages(c("gapminder", "glue", "hunspell", "lazyeval", "lubridate", "openssl", "topicmodels", "withr"))
source('~/Documents/MPH Brown /PHP 1560 /in class/text-mining-in-class-team_1/allan/01_web_scraping.R', echo=TRUE)
source('~/Documents/MPH Brown /PHP 1560 /in class/text-mining-in-class-team_1/allan/00_helper_functions.R', echo=TRUE)
source('~/Documents/MPH Brown /PHP 1560 /in class/text-mining-in-class-team_1/allan/01_web_scraping.R', echo=TRUE)
source('~/Documents/MPH Brown /PHP 1560 /in class/text-mining-in-class-team_1/final_project/01_web_scraping.R', echo=TRUE)
source('~/Documents/MPH Brown /PHP 1560 /in class/text-mining-in-class-team_1/final_project/01_web_scraping.R', echo=TRUE)
View(get_harry_potter_characters)
source('~/Documents/MPH Brown /PHP 1560 /in class/text-mining-in-class-team_1/final_project/01_web_scraping.R', echo=TRUE)
source('~/Documents/MPH Brown /PHP 1560 /in class/text-mining-in-class-team_1/allan/03_clean_data.R', echo=TRUE)
source('~/Documents/MPH Brown /PHP 1560 /in class/text-mining-in-class-team_1/allan/03_clean_data.R', echo=TRUE)
source('~/Documents/MPH Brown /PHP 1560 /in class/text-mining-in-class-team_1/allan/03_clean_data.R', echo=TRUE)
source('~/Documents/MPH Brown /PHP 1560 /in class/text-mining-in-class-team_1/final_project/03_clean_data.R', echo=TRUE)
source('~/Documents/MPH Brown /PHP 1560 /in class/text-mining-in-class-team_1/final_project/04_main_analysis.R', echo=TRUE)
source('~/Documents/MPH Brown /PHP 1560 /in class/text-mining-in-class-team_1/final_project/04_main_analysis.R', echo=TRUE)
source('~/Documents/MPH Brown /PHP 1560 /in class/text-mining-in-class-team_1/final_project/01_web_scraping.R', echo=TRUE)
source('~/Documents/MPH Brown /PHP 1560 /in class/text-mining-in-class-team_1/final_project/01_web_scraping.R', echo=TRUE)
source('~/Documents/MPH Brown /PHP 1560 /in class/text-mining-in-class-team_1/final_project/04_main_analysis.R', echo=TRUE)
source('~/Documents/MPH Brown /PHP 1560 /in class/text-mining-in-class-team_1/final_project/04_main_analysis.R', echo=TRUE)
load("~/Documents/MPH Brown /PHP 1560 /in class/text-mining-in-class-team_1/allan/data/harrypotter_characters.rda")
source('~/Documents/MPH Brown /PHP 1560 /in class/text-mining-in-class-team_1/final_project/makefile.R', echo=TRUE)
source('~/Documents/MPH Brown /PHP 1560 /in class/text-mining-in-class-team_1/final_project/makefile.R', echo=TRUE)
source('~/Documents/MPH Brown /PHP 1560 /in class/text-mining-in-class-team_1/final_project/makefile.R', echo=TRUE)
source('~/Documents/MPH Brown /PHP 1560 /in class/text-mining-in-class-team_1/final_project/makefile.R', echo=TRUE)
source('~/Documents/MPH Brown /PHP 1560 /in class/text-mining-in-class-team_1/final_project/makefile.R', echo=TRUE)
source('~/Documents/MPH Brown /PHP 1560 /in class/text-mining-in-class-team_1/final_project/makefile.R', echo=TRUE)
source('~/Documents/MPH Brown /PHP 1560 /in class/text-mining-in-class-team_1/final_project/04_main_analysis.R', echo=TRUE)
source('~/Documents/MPH Brown /PHP 1560 /in class/text-mining-in-class-team_1/final_project/makefile.R', echo=TRUE)
source('~/Documents/MPH Brown /PHP 1560 /in class/text-mining-in-class-team_1/final_project/05_nour question.R', echo=TRUE)
source('~/Documents/MPH Brown /PHP 1560 /in class/text-mining-in-class-team_1/final_project/05_nour question.R', echo=TRUE)
source('~/Documents/MPH Brown /PHP 1560 /in class/text-mining-in-class-team_1/Nour/check_packages.R', echo=TRUE)
source('~/Documents/MPH Brown /PHP 1560 /in class/text-mining-in-class-team_1/Nour/01_ setting up R .R', echo=TRUE)
source('~/Documents/MPH Brown /PHP 1560 /in class/text-mining-in-class-team_1/Nour/02_ getting and cleaning data  .R', echo=TRUE)
source('~/Documents/MPH Brown /PHP 1560 /in class/text-mining-in-class-team_1/Nour/03_ getting and cleaning characters list.R', echo=TRUE)
source('~/Documents/MPH Brown /PHP 1560 /in class/text-mining-in-class-team_1/final_project/05_nour question.R', echo=TRUE)
source('~/Documents/MPH Brown /PHP 1560 /in class/text-mining-in-class-team_1/final_project/05_nour question.R', echo=TRUE)
View(harrypoterclean)
source('~/Documents/MPH Brown /PHP 1560 /in class/text-mining-in-class-team_1/final_project/05_nour question.R', echo=TRUE)
View(harrypoterclean)
View(characters_listjoin)
source('~/Documents/MPH Brown /PHP 1560 /in class/text-mining-in-class-team_1/final_project/05_nour question.R', echo=TRUE)
source('~/Documents/MPH Brown /PHP 1560 /in class/text-mining-in-class-team_1/final_project/05_nour question.R', echo=TRUE)
source('~/Documents/MPH Brown /PHP 1560 /in class/text-mining-in-class-team_1/final_project/05_nour question.R', echo=TRUE)
source('~/Documents/MPH Brown /PHP 1560 /in class/text-mining-in-class-team_1/final_project/05_nour question.R', echo=TRUE)
source('~/Documents/MPH Brown /PHP 1560 /in class/text-mining-in-class-team_1/final_project/05_nour question.R', echo=TRUE)
source('~/Documents/MPH Brown /PHP 1560 /in class/text-mining-in-class-team_1/final_project/05_nour question.R', echo=TRUE)
source('~/Documents/MPH Brown /PHP 1560 /in class/text-mining-in-class-team_1/final_project/05_nour question.R', echo=TRUE)
source('~/Documents/MPH Brown /PHP 1560 /in class/text-mining-in-class-team_1/final_project/05_nour question.R', echo=TRUE)
source('~/Documents/MPH Brown /PHP 1560 /in class/text-mining-in-class-team_1/final_project/05_nour question.R', echo=TRUE)
source('~/Documents/MPH Brown /PHP 1560 /in class/text-mining-in-class-team_1/final_project/05_nour question.R', echo=TRUE)
View(harrypotter_clean_tokens)
source('~/Documents/MPH Brown /PHP 1560 /in class/text-mining-in-class-team_1/final_project/05_nour question.R', echo=TRUE)
source('~/Documents/MPH Brown /PHP 1560 /in class/text-mining-in-class-team_1/final_project/05_nour question.R', echo=TRUE)
source('~/Documents/MPH Brown /PHP 1560 /in class/text-mining-in-class-team_1/final_project/05_nour question.R', echo=TRUE)
source('~/Documents/MPH Brown /PHP 1560 /in class/text-mining-in-class-team_1/final_project/05_nour question.R', echo=TRUE)
source('~/Documents/MPH Brown /PHP 1560 /in class/text-mining-in-class-team_1/final_project/05_nour question.R', echo=TRUE)
ggsave("final_project/graph/nourQ.png")
source('~/Documents/MPH Brown /PHP 1560 /in class/text-mining-in-class-team_1/final_project/05_nour question.R', echo=TRUE)
source('~/Documents/MPH Brown /PHP 1560 /in class/text-mining-in-class-team_1/final_project/05_nour question.R', echo=TRUE)
graphQ1 <- function(){
harrypoterclean %>%
inner_join( characters_listjoin, by = "word" ) %>%
count(Book, word,sort= TRUE) %>%
top_n(50) %>%
filter( word != "harry")%>%
ggplot(aes(word, n, fill = word)) +
geom_col(show.legend = FALSE) +
facet_wrap(~Book) +
coord_flip() +
theme_minimal() + # start with a minimal them and add what we need
theme( text = element_text(color = "gray20"),
axis.text = element_text(face = "italic", size = 6),
axis.line = element_line(color = "gray50", size = 0.5),
axis.line.y = element_blank(),
panel.grid.major = element_line(color = "gray80", size = 0.5),
panel.grid.major.y = element_blank(),
panel.grid.minor = element_line(color = "gray10", size = 0.5)
)
ggsave("Nour/graph/q1.png")
}
graphQ1()
source('~/Documents/MPH Brown /PHP 1560 /in class/text-mining-in-class-team_1/Nour/04_ Analysis.R', echo=TRUE)
source('~/Documents/MPH Brown /PHP 1560 /in class/text-mining-in-class-team_1/final_project/05_nour question.R', echo=TRUE)
source('~/Documents/MPH Brown /PHP 1560 /in class/text-mining-in-class-team_1/final_project/05_nour question.R', echo=TRUE)
source('~/Documents/MPH Brown /PHP 1560 /in class/text-mining-in-class-team_1/final_project/05_nour question.R', echo=TRUE)
source('~/Documents/MPH Brown /PHP 1560 /in class/text-mining-in-class-team_1/final_project/05_nour question.R', echo=TRUE)
characters_listjoin <- harrypotter_characters
source('~/Documents/MPH Brown /PHP 1560 /in class/text-mining-in-class-team_1/final_project/05_nour question.R', echo=TRUE)
graph.nourQ()
source('~/Documents/MPH Brown /PHP 1560 /in class/text-mining-in-class-team_1/final_project/05_nour question.R', echo=TRUE)
characters_listjoin <- harrypotter_characters %>%
mutate(word = tolower(characters_listjoin$FirstName))
characters_listjoin <- harrypotter_characters %>%
mutate(word = tolower(characters_listjoin$FirstName))
source('~/Documents/MPH Brown /PHP 1560 /in class/text-mining-in-class-team_1/final_project/05_nour question.R', echo=TRUE)
harrypotter_characters %>%
mutate(word = tolower(characters_listjoin$FirstName))
source('~/Documents/MPH Brown /PHP 1560 /in class/text-mining-in-class-team_1/final_project/05_nour question.R', echo=TRUE)
source('~/Documents/MPH Brown /PHP 1560 /in class/text-mining-in-class-team_1/final_project/05_nour question.R', echo=TRUE)
source('~/Documents/MPH Brown /PHP 1560 /in class/text-mining-in-class-team_1/final_project/05_nour question.R', echo=TRUE)
source('~/Documents/MPH Brown /PHP 1560 /in class/text-mining-in-class-team_1/final_project/makefile.R', echo=TRUE)
source('~/Documents/MPH Brown /PHP 1560 /in class/text-mining-in-class-team_1/final_project/makefile.R', echo=TRUE)
source("final_project/05_nourQ.R")
graph.nourQ2()
source('~/Documents/MPH Brown /PHP 1560 /in class/text-mining-in-class-team_1/final_project/05_nourQ.R', echo=TRUE)
harrypoterclean %>%
filter(word == "harry") %>%
mutate( fiftylines=  floor(line / 50)) %>%
count(Book, fiftylines, word) %>%
#making graph
ggplot(aes(fiftylines, n, color = Book)) +
# Make facets by Book
facet_wrap(~Book) +
geom_line(size = .1, show.legend = FALSE) +
expand_limits(y = 0)
ggsave("final_project/graph/nourQ2.png")
graph.nourQ2()
graph.nourQ2() <- function() {
harrypoterclean %>%
filter(word == "harry") %>%
mutate( fiftylines=  floor(line / 50)) %>%
count(Book, fiftylines, word) %>%
#making graph
ggplot(aes(fiftylines, n, color = Book)) +
# Make facets by Book
facet_wrap(~Book) +
geom_line(size = .1, show.legend = FALSE) +
expand_limits(y = 0)
ggsave("final_project/graph/nourQ2.png")
}
graph.nourQ2()
harrypoterclean %>%
filter(word == "harry") %>%
mutate( fiftylines=  floor(line / 50)) %>%
count(Book, fiftylines, word) %>%
#making graph
ggplot(aes(fiftylines, n, color = Book)) +
# Make facets by Book
facet_wrap(~Book) +
geom_line(size = .1, show.legend = FALSE) +
expand_limits(y = 0)
ggsave("final_project/graph/nourQ2.png")
harrypoterclean %>%
filter(word == "harry") %>%
mutate( fiftylines=  floor(line / 50)) %>%
count(Book, fiftylines, word) %>%
#making graph
ggplot(aes(fiftylines, n, color = Book)) +
# Make facets by Book
facet_wrap(~Book) +
geom_line(size = .1, show.legend = FALSE) +
expand_limits(y = 0)%>%
ggsave("final_project/graph/nourQ2.png")
harrypoterclean %>%
filter(word == "harry") %>%
mutate( fiftylines=  floor(line / 50)) %>%
count(Title, fiftylines, word) %>%
#making graph
ggplot(aes(fiftylines, n, color = Title)) +
# Make facets by Title
facet_wrap(~Title) +
geom_line(size = .1, show.legend = FALSE) +
expand_limits(y = 0)%>%
ggsave("final_project/graph/nourQ2.png")
harrypoterclean %>%
filter(word == "harry") %>%
mutate( fiftylines=  floor(line / 50)) %>%
count(Title, fiftylines, word) %>%
#making graph
ggplot(aes(fiftylines, n, color = Title)) +
# Make facets by Title
facet_wrap(~Title) +
geom_line(size = .1, show.legend = FALSE) +
expand_limits(y = 0)
ggsave("final_project/graph/nourQ2.png")
